@page "/products"

<div class="container">
    <h1 class="text-center my-4">Our Products</h1>

    @if (categories == null)
    {
        <div class="alert alert-info">Loading categories...</div>
    }
    else
    {
        <div class="btn-group mb-4" role="group">
            <Button Color="@(selectedCategoryId == 0 ? ButtonColor.Primary : ButtonColor.Light)"
                    @onclick="(() => LoadProductsByCategory(0))">
                All Products
            </Button>

            @foreach (var category in categories)
            {
                <Button Color="@(selectedCategoryId == category.CategoryID ? ButtonColor.Primary : ButtonColor.Light)"
                        @onclick="(() => LoadProductsByCategory(category.CategoryID))">
                    @category.CategoryName
                </Button>
            }
        </div>
    }

    @if (products == null)
    {
        <div class="alert alert-info">Loading products...</div>
    }
    else if (!products.Any())
    {
        <div class="alert alert-warning">No products found for the selected category.</div>
    }
    else
    {
        <div class="row">
            @foreach (var product in products)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        <img src="data:image/png;base64,@Convert.ToBase64String(product.ImageData)" 
                        class="card-img-top" 
                        alt="@product.Name"
                        style="cursor: pointer;"
                        @onclick="(() => NavigateToDetails(product.ProductID))">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p><strong>Price:</strong> @product.Price.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))</p>
                            <div class="d-flex justify-content-between">
                                <Button Color="ButtonColor.Danger" @onclick="(() => ShowDeleteConfirmation(product))">Delete</Button>
                                <Button Color="ButtonColor.Primary" @onclick="(() => NavigateToDetails(product.ProductID))">View</Button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <Modal @ref="modal" Title="Confirm Deletion">
        <BodyTemplate>
            <p>Are you sure you want to delete this product?</p>
        </BodyTemplate>
        <FooterTemplate>
            <Button Color="ButtonColor.Primary" @onclick="ConfirmDelete">Yes</Button>
            <Button Color="ButtonColor.Secondary" @onclick="CancelDelete">No</Button>
        </FooterTemplate>
    </Modal>
</div>